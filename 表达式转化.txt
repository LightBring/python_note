

将中缀表达式转换为前缀表达式：

(1) 初始化两个栈：运算符栈S1和储存中间结果的栈S2；
(2) 从右至左扫描中缀表达式
(3) 遇到操作数时,将其压入S2
(4) 遇到运算符时,比较其与S1栈顶运算符的优先级：
	(4-1) 如果S1为空,或栈顶运算符为右括号“)”，则直接将此运算符入栈
	(4-2) 否则,若优先级比栈顶运算符的较高或相等,也将运算符压入S1
	(4-3) 否则,将S1栈顶的运算符弹出并压入到S2中,
	再次转到(4-1)与S1中新的栈顶运算符相比较
(5) 遇到括号时：
	(5-1) 如果是右括号“)”,则直接压入S1
	(5-2) 如果是左括号“(”,则依次弹出S1栈顶的运算符,并压入S2,直到遇到右括号为止,
		此时将这一对括号丢弃
(6) 重复步骤(2)至(5),直到表达式的最左边
(7) 将S1中剩余的运算符依次弹出并压入S2
(8) 依次弹出S2中的元素并输出,结果即为中缀表达式对应的前缀表达式。

例如，将中缀表达式“1+((2+3)×4)-5”转换为前缀表达式的过程如下：
扫描到的元素	S2(中间)(栈底->栈顶)	S1(符号)(栈底->栈顶)	说明
5	5	                        空	                            数字，直接入栈
-	5	-	S1为空，运算符直接入栈
)	5	- )	右括号直接入栈
4	5 4	- )	数字直接入栈
×	5 4	- ) ×	S1栈顶是右括号，直接入栈
)	5 4	- ) × )	右括号直接入栈
3	5 4 3	- ) × )	数字
+	5 4 3	- ) × ) +	S1栈顶是右括号，直接入栈
2	5 4 3 2	- ) × ) +	数字
(	5 4 3 2 +	- ) ×	左括号，弹出运算符直至遇到右括号
(	5 4 3 2 + ×	-	同上
+	5 4 3 2 + ×	- +	优先级与-相同，入栈
1	5 4 3 2 + × 1	- +	数字
到达最左端	5 4 3 2 + × 1 + -空	S1中剩余的运算符因此
结果为“- + 1 × + 2 3 4 5”。

2 * 3 + 1 - 4 / 2 * 7 - 1

